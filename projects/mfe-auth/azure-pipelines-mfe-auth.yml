# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
      - main
      - feature/*
      - fix/*
  paths:
    include:
      - "mfe-host/*"

variables:
  nodeVersion: "22.x"
  angularCliVersion: "19.2.10"
  npmRegistryURL: "https://registry.npmjs.org/"
  appName: "mfe-host"
  appPath: "projects/mfe-host"
  appArtifactName: "mfe-host"
  appBuildCommandDev: "npm run build:mfe-host -- --configuration=development"
  appBuildCommandProd: "npm run build:mfe-host -- --configuration=production"
  tag: $(Build.BuildId)
  NPM_CACHE_FOLDER: "$(Build.SourcesDirectory)/node_modules"

stages:
  - stage: Build
    jobs:
      - job: install_dependencies
        pool:
          vmImage: ubuntu-latest
        steps:
          # Install node
          - task: NodeTool@0
            displayName: "Install Node.js"
            inputs:
              versionSpec: $(nodeVersion)

          - task: Cache@2
            inputs:
              key: 'npm | "$(Agent.OS)" | "**/package-lock.json, !**/node_modules/**/package-lock.json, !**/.*/**/package-lock.json" | package-lock.json'
              # restoreKeys: |
              #   npm | "$(Agent.OS)"
              path: $(NPM_CACHE_FOLDER)
              cacheHitVar: NPM_CACHE_RESTORED
            displayName: "Cache Npm Dependencies"

          # Install dependencies
          - script: |
              npm install -g @angular/cli@${{ variables.angularCliVersion}}
              npm ci
            condition: ne(variables.NPM_CACHE_RESTORED, 'true')
            displayName: "Angular CLI ${{ variables.angularCliVersion}} and Install dependencies"

          - script: ${{ variables.appBuildCommandProd }}
            displayName: "Build ${{ variables.appName }} Prod"
            env:
              MS_API_URL: $(MS_API_URL)

          # Copy and publish artifact
          - task: CopyPublishBuildArtifacts@1
            displayName: "Copy Publish Artifact: angular-web-${{ variables.appArtifactName }}"
            inputs:
              CopyRoot: /dist
              Contents: "**"
              ArtifactName: angular-web-${{ variables.appArtifactName }}
              ArtifactType: Container
