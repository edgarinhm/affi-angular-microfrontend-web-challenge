stages:
  - stage: ${{ parameters.stageName }}
    displayName: Build and publish artifact ${{ parameters.stageDisplayName }}
    #group:
    #pool:
    jobs:
      - job: build
        displayName: Build  ${{ parameters.stageDisplayName }}
        steps:
          # Install node
          - task: NodeTool@0
            displayName: "Install Node.js $(nodeVersion)"
            inputs:
              versionSpec: $(nodeVersion)

          # Save the cache
          - task: Cache@2
            inputs:
              key: $(NPM_CACHE_KEYS)
              restoreKeys: |
                npm | "$(Agent.OS)"
              path: $(NPM_CACHE_FOLDER)
              cacheHitVar: NPM_CACHE_RESTORED
            displayName: "Cache Npm Dependencies"

          # Install dependencies
          - script: |
              npm install -g @angular/cli@$(angularCliVersion)
              npm ci
            displayName: "Angular CLI $(angularCliVersion) and Install dependencies"

          - script: $(appBuildCommandProd)
            displayName: "Build $(appName)"

          # Archive build artifacts
          - task: ArchiveFiles@2
            displayName: "Archive Build Artifacts $(appArtifactName)"
            inputs:
              rootFolderOrFile: "$(System.DefaultWorkingDirectory)/dist/$(appArtifactPath)"
              includeRootFolder: false
              archiveType: "zip"
              archiveFile: "$(Build.ArtifactStagingDirectory)/build/$(appArtifactPath)-$(Build.BuildId).zip"
              replaceExistingArchive: true

      - job: publish
        displayName: Publish ${{ parameters.stageDisplayName }}
        dependsOn: build
        #pool:
        steps:
          # Prevent checking out any source code
          - checkout: none
          # Publish build artifacts
          - task: PublishBuildArtifacts@1
            displayName: Publish Build Artifacts
            inputs:
              pathtoPublish: "$(Build.ArtifactStagingDirectory)/build/$(appArtifactPath)-$(Build.BuildId).zip"
              artifactName: "drop-$(appArtifactName)"
              publishLocation: "Container"
